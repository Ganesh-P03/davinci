function Screen.init 0
push constant 16384
pop static 0
push constant 1
neg
pop static 1
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_0
push local 0
push constant 8192
lt
not
if-goto END_WHILE_0
push constant 0
push static 0
push local 0
add
pop pointer 1
pop that 0
goto WHILE_0
label END_WHILE_0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.drawPixel 2
push argument 1
push constant 32
call Math.multiply 2
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push constant 15
and
call Math.twoToThe 1
pop local 1
push static 1
if-goto IF_1
push static 0
push local 0
add
pop pointer 1
push that 0
push local 1
not
and
push static 0
push local 0
add
pop pointer 1
pop that 0
goto ENDIF_1
label IF_1
push static 0
push local 0
add
pop pointer 1
push that 0
push local 1
or
push static 0
push local 0
add
pop pointer 1
pop that 0
label ENDIF_1
push constant 0
return
function Screen.drawLine 6
push argument 0
push argument 2
gt
if-goto IF_2
goto ENDIF_2
label IF_2
push argument 0
pop local 4
push argument 2
pop argument 0
push local 4
pop argument 2
push argument 1
pop local 4
push argument 3
pop argument 1
push local 4
pop argument 3
label ENDIF_2
push argument 2
push argument 0
sub
pop local 0
push argument 3
push argument 1
sub
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
push local 1
push constant 0
eq
if-goto IF_3
push local 0
push constant 0
eq
if-goto IF_4
push constant 0
pop local 5
push argument 1
push argument 3
lt
if-goto IF_5
label WHILE_6
push local 2
push local 0
gt
not
push local 3
push local 1
lt
not
and
not
if-goto END_WHILE_6
push argument 0
push local 2
add
push argument 1
push local 3
sub
call Screen.drawPixel 2
pop temp 0
push local 5
push constant 0
gt
if-goto IF_7
push local 3
push constant 1
add
pop local 3
push local 5
push local 1
add
pop local 5
goto ENDIF_7
label IF_7
push local 2
push constant 1
add
pop local 2
push local 5
push local 0
sub
pop local 5
label ENDIF_7
goto WHILE_6
label END_WHILE_6
goto ENDIF_5
label IF_5
push constant 0
pop local 2
push constant 0
pop local 3
label WHILE_8
push local 2
push local 0
gt
not
push local 3
push local 1
gt
not
and
not
if-goto END_WHILE_8
push argument 0
push local 2
add
push argument 1
push local 3
add
call Screen.drawPixel 2
pop temp 0
push local 5
push constant 0
gt
if-goto IF_9
push local 3
push constant 1
add
pop local 3
push local 5
push local 1
add
pop local 5
goto ENDIF_9
label IF_9
push local 2
push constant 1
add
pop local 2
push local 5
push local 0
sub
pop local 5
label ENDIF_9
goto WHILE_8
label END_WHILE_8
label ENDIF_5
goto ENDIF_4
label IF_4
push argument 0
push argument 1
push argument 3
call Screen.drawVLine 3
pop temp 0
label ENDIF_4
goto ENDIF_3
label IF_3
push argument 0
push argument 2
push argument 1
call Screen.drawHLine 3
pop temp 0
label ENDIF_3
push constant 0
return
function Screen.drawHLine 1
push argument 0
push argument 1
gt
if-goto IF_10
goto ENDIF_10
label IF_10
push argument 0
pop local 0
push argument 1
pop argument 0
push local 0
pop argument 1
label ENDIF_10
label WHILE_11
push argument 1
push argument 0
lt
not
not
if-goto END_WHILE_11
push argument 0
push argument 2
call Screen.drawPixel 2
pop temp 0
push argument 0
push constant 1
add
pop argument 0
goto WHILE_11
label END_WHILE_11
push constant 0
return
function Screen.drawVLine 1
push argument 1
push argument 2
gt
if-goto IF_12
goto ENDIF_12
label IF_12
push argument 1
pop local 0
push argument 2
pop argument 1
push local 0
pop argument 2
label ENDIF_12
label WHILE_13
push argument 2
push argument 1
lt
not
not
if-goto END_WHILE_13
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_13
label END_WHILE_13
push constant 0
return
function Screen.drawRectangle 0
label WHILE_14
push argument 1
push argument 3
gt
not
not
if-goto END_WHILE_14
push argument 0
push argument 2
push argument 1
call Screen.drawHLine 3
pop temp 0
push argument 1
push constant 1
add
pop argument 1
goto WHILE_14
label END_WHILE_14
push constant 0
return
function Screen.drawCircle 3
push argument 2
neg
pop local 1
push argument 2
push argument 2
call Math.multiply 2
pop local 2
label WHILE_15
push local 1
push argument 2
gt
not
not
if-goto END_WHILE_15
push local 2
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
pop local 0
push argument 0
push local 0
sub
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawHLine 3
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_15
label END_WHILE_15
push constant 0
return
